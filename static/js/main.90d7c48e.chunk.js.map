{"version":3,"sources":["components/Item.js","components/ButtonDelete.js","components/Button.js","components/List.js","components/SubmitTodoForm.js","containers/Container.js","App.js","serviceWorker.js","index.js"],"names":["Item","todo","children","textStyle","done","className","task","ButtonDelete","id","onClick","todoDone","btnStyle","bg","icon","faTrashAlt","title","Button","faAngleDown","faAngleUp","List","currentTodos","onClickProps","todoList","map","key","SubmitTodoForm","state","input","handleChange","e","setState","target","value","handleSubmit","preventDefault","focus","length","props","onSubmitProps","onSubmit","this","type","name","onChange","placeholder","React","Component","Container","count","todos","clickHandler","filter","Math","abs","submitHandler","newTodo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.90d7c48e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Item = ({ todo, children }) => {\r\n\tconst textStyle = todo.done ? \"text-muted font-weight-normal\" : \"font-weight-bold\";\r\n\treturn (\r\n\t\t<li className=\"list-group-item\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{children}\r\n\t\t\t\t<span className={`${textStyle} mx-2 align-center`}>{todo.task}</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ButtonDelete = ({ id, onClick, todoDone }) => {\r\n\tconst btnStyle = { bg: \"bg-info text-white\", icon: faTrashAlt };\r\n\tif (!todoDone) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => onClick(-id)} // -id is condition for delete from list\r\n\t\t\t\ttitle=\"Delete\"\r\n\t\t\t\tclassName={`${btnStyle.bg} px-3 pb-1 m-0 border-0 rounded`}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon className=\"small\" icon={btnStyle.icon} />\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\treturn \"\";\r\n};\r\n\r\nexport default ButtonDelete;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ButtonDelete from \"./ButtonDelete\";\r\n\r\nconst Button = ({ id, todoDone, onClick }) => {\r\n\tconst btnStyle = todoDone\r\n\t\t? { bg: \"bg-warning\", icon: faAngleDown, title: \"Remove\" }\r\n\t\t: { bg: \"bg-info text-white\", icon: faAngleUp, title: \"Recover\" };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => onClick(id)}\r\n\t\t\t\ttitle={btnStyle.title}\r\n\t\t\t\tclassName={`${btnStyle.bg} px-3 mx-2 border-0 rounded`}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={btnStyle.icon} />\r\n\t\t\t</button>\r\n\t\t\t<ButtonDelete todoDone={todoDone} id={id} onClick={onClick} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Item from \"./Item\";\r\nimport Button from \"./Button\";\r\n\r\nconst List = ({ currentTodos, onClickProps, todoDone }) => {\r\n\t// the map function will read todos list passed in from App state\r\n\t// and create a List component\r\n\tconst todoList = currentTodos.map((todo) => {\r\n\t\tif (todo.done === !todoDone) {\r\n\t\t\treturn (\r\n\t\t\t\t<Item key={todo.id} todo={todo}>\r\n\t\t\t\t\t<Button onClick={onClickProps} id={todo.id} todoDone={todoDone} />\r\n\t\t\t\t</Item>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t});\r\n\r\n\treturn <ul className=\"shadow p-3 mb-5 bg-white rounded list-group w-100\">{todoList}</ul>;\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nclass SubmitTodoForm extends React.Component {\r\n\tstate = {\r\n\t\tinput: \"\",\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ input: e.target.value });\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target[\"todoInput\"].value = \"\";\r\n\t\te.target[\"todoInput\"].focus();\r\n\t\tif (this.state.input.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.onSubmitProps(this.state.input);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"shadow p-3 mb-5 bg-white rounded d-flex flex-row m-5\"\r\n\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"todoInput\"\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tclassName=\"col form-control mb-2 mr-sm-2\"\r\n\t\t\t\t\tplaceholder=\"Enter Todo\"\r\n\t\t\t\t></input>\r\n\t\t\t\t<button className=\"btn btn-primary mb-2\">Add Todo</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SubmitTodoForm;\r\n","import React, { Component } from \"react\";\r\nimport List from \"../components/List\";\r\nimport SubmitTodoForm from \"../components/SubmitTodoForm\";\r\n\r\nclass Container extends Component {\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t\ttodos: [],\r\n\t};\r\n\r\n\tclickHandler = (id) => {\r\n\t\tlet todos = [];\r\n\t\tif (id > 0) {\r\n\t\t\ttodos = this.state.todos.map((todo) => {\r\n\t\t\t\treturn todo.id === id ? { task: todo.task, done: !todo.done, id: todo.id } : todo;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttodos = this.state.todos.filter((todo) => todo.id !== Math.abs(id));\r\n\t\t}\r\n\t\tthis.setState({ todos });\r\n\t};\r\n\r\n\tsubmitHandler = (input) => {\r\n\t\tif (input.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { count, todos } = this.state;\r\n\t\tconst newTodo = { task: input, done: false, id: ++count };\r\n\t\tthis.setState({ todos: [...todos, newTodo], count });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column align-items-center\">\r\n\t\t\t\t<div className=\"col-xl-5 col-lg-8 col-sm-10\">\r\n\t\t\t\t\t<SubmitTodoForm onSubmitProps={this.submitHandler} />\r\n\t\t\t\t\t<h4>Todo List</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<List onClickProps={this.clickHandler} todoDone={true} currentTodos={this.state.todos} />\r\n\t\t\t\t\t<h4 className=\"mt-4\">List History</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<List onClickProps={this.clickHandler} todoDone={false} currentTodos={this.state.todos} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Container from \"./containers/Container\";\nclass App extends Component {\n\trender() {\n\t\treturn <Container />;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}