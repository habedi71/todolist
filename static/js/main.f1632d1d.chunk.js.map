{"version":3,"sources":["components/Item.js","components/ButtonDelete.js","components/Button.js","components/List.js","components/SubmitForm.js","App.js","serviceWorker.js","index.js"],"names":["Item","todo","children","textStyle","done","className","task","ButtonDelete","id","onClick","todoDone","btnStyle","bg","icon","faTrashAlt","name","title","Button","faAngleDown","faAngleUp","List","currentTodos","on_click","todoList","map","key","SubmitForm","on_change","on_submit","onSubmit","type","onChange","placeholder","App","state","count","todos","clickHandler","e","Number","target","filter","Math","abs","setState","changeHandler","value","submitHandler","preventDefault","newTodo","this","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1632d1d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Item = ({ todo, children }) => {\r\n\tconst textStyle = todo.done ? \"text-muted font-weight-normal\" : \"font-weight-bold\";\r\n\treturn (\r\n\t\t<li className=\"list-group-item\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{children}\r\n\t\t\t\t<span className={`${textStyle} mx-2 align-center`}>{todo.task}</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ButtonDelete = ({ id, onClick, todoDone }) => {\r\n\tconst btnStyle = { bg: \"bg-info text-white\", icon: faTrashAlt };\r\n\tif (!todoDone) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tname={`-${id}`}\r\n\t\t\t\ttitle=\"Delete\"\r\n\t\t\t\tclassName={`${btnStyle.bg} px-3 pb-1 m-0 border-0 rounded`}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon className=\"small\" icon={btnStyle.icon} />\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\treturn \"\";\r\n};\r\n\r\nexport default ButtonDelete;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ButtonDelete from \"./ButtonDelete\";\r\n\r\nconst Button = ({ id, todoDone, onClick }) => {\r\n\tconst btnStyle = todoDone\r\n\t\t? { bg: \"bg-warning\", icon: faAngleDown, title: \"Remove\" }\r\n\t\t: { bg: \"bg-info text-white\", icon: faAngleUp, title: \"Recover\" };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tname={id}\r\n\t\t\t\ttitle={btnStyle.title}\r\n\t\t\t\tclassName={`${btnStyle.bg} px-3 mx-2 border-0 rounded`}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={btnStyle.icon} />\r\n\t\t\t</button>\r\n\t\t\t<ButtonDelete id={id} todoDone={todoDone} onClick={onClick} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Item from \"./Item\";\r\nimport Button from \"./Button\";\r\n\r\nconst List = ({ currentTodos, on_click, todoDone, title }) => {\r\n\t// the map function will read todos list passed in from App state\r\n\t// and create a List component\r\n\tconst todoList = currentTodos.map((todo) => {\r\n\t\tif (todo.done === !todoDone) {\r\n\t\t\treturn (\r\n\t\t\t\t<Item key={todo.id} todo={todo}>\r\n\t\t\t\t\t<Button id={todo.id} onClick={on_click} todoDone={todoDone} />\r\n\t\t\t\t</Item>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t});\r\n\r\n\treturn <ul className=\"shadow p-3 mb-5 bg-white rounded list-group w-100\">{todoList}</ul>;\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst SubmitForm = ({ on_change, on_submit }) => {\r\n\treturn (\r\n\t\t<form className=\"shadow p-3 mb-5 bg-white rounded d-flex flex-row m-5\" onSubmit={on_submit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"todoInput\"\r\n\t\t\t\tonChange={on_change}\r\n\t\t\t\tclassName=\"col form-control mb-2 mr-sm-2\"\r\n\t\t\t\tplaceholder=\"Enter Todo\"\r\n\t\t\t></input>\r\n\t\t\t<button className=\"btn btn-primary mb-2\">Add Todo</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SubmitForm;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport List from \"./components/List\";\nimport SubmitForm from \"./components/SubmitForm\";\n\nclass App extends Component {\n\tstate = {\n\t\ttodo: \"\",\n\t\tcount: 0,\n\t\ttodos: [],\n\t};\n\n\tclickHandler = (e) => {\n\t\tconst id = Number(e.target.name);\n\t\tlet todos = [];\n\t\tif (id > 0) {\n\t\t\ttodos = this.state.todos.map((todo) => {\n\t\t\t\treturn id === todo.id ? { task: todo.task, done: !todo.done, id: todo.id } : todo;\n\t\t\t});\n\t\t} else {\n\t\t\ttodos = this.state.todos.filter((todo) => todo.id !== Math.abs(id));\n\t\t}\n\t\tthis.setState({ todos });\n\t};\n\n\tchangeHandler = (e) => {\n\t\tthis.setState({ todo: e.target.value });\n\t};\n\n\tsubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\te.target[\"todoInput\"].value = \"\";\n\t\tlet { todo, count, todos } = this.state;\n\t\tcount++;\n\t\tconst newTodo = { task: todo, done: false, id: count };\n\t\tthis.setState({ todos: [...todos, newTodo], count: count, todo: \"\" });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"d-flex flex-column align-items-center\">\n\t\t\t\t<div className=\"col-xl-5 col-lg-8 col-sm-10\">\n\t\t\t\t\t<SubmitForm on_submit={this.submitHandler} on_change={this.changeHandler} />\n\t\t\t\t\t<h4>Todo List</h4>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<List\n\t\t\t\t\t\ton_click={this.clickHandler}\n\t\t\t\t\t\ton_change={this.changeHandler}\n\t\t\t\t\t\ttodoDone={true}\n\t\t\t\t\t\tcurrentTodos={this.state.todos}\n\t\t\t\t\t/>\n\t\t\t\t\t<h4 className=\"mt-4\">List History</h4>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<List on_click={this.clickHandler} todoDone={false} currentTodos={this.state.todos} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}