{"version":3,"sources":["components/Item.js","components/Button.js","components/ButtonDelete.js","components/ButtonMove.js","components/List.js","components/SubmitTodoForm.js","containers/Container.js","App.js","serviceWorker.js","index.js"],"names":["Item","todo","children","textStyle","done","className","id","task","Button","todoDone","onClick","btnStyle","bg","icon","title","size","ButtonDelete","onClickDelete","ButtonMove","lastId","onClickMove","List","currentTodos","onClickProps","todoList","map","index","key","length","SubmitTodoForm","state","input","handleChange","e","setState","target","value","handleClick","inputElement","document","getElementById","focus","newInput","props","onSubmitProps","type","onChange","this","placeholder","React","Component","Container","todos","clickHandler","submitHandler","newTodo","uuid","clickDeleteHandler","filter","t","clickMoveHandler","step","library","add","faTrash","faTrashRestore","faWindowClose","faPencilAlt","faChevronUp","faChevronDown","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7234e33e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Item = ({ todo, children }) => {\r\n\tconst textStyle = todo.done ? \"text-muted font-weight-normal\" : \"font-weight-bold\";\r\n\treturn (\r\n\t\t<li className=\"list-group-item\">\r\n\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t{children}\r\n\t\t\t\t<span className={`ml-2 ${textStyle}`} id={`item_${todo.id}`}>\r\n\t\t\t\t\t{todo.task}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Button = ({ id, todoDone, onClick }) => {\r\n\tconst btnStyle = todoDone\r\n\t\t? { bg: \"bg-warning\", icon: \"trash\", title: \"Remove\" }\r\n\t\t: { bg: \"bg-info text-white\", icon: \"trash-restore\", title: \"Recover\" };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => onClick(id)}\r\n\t\t\t\ttitle={btnStyle.title}\r\n\t\t\t\tclassName={`btn btn-sm ${btnStyle.bg} mx-1`}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={btnStyle.icon} size=\"1x\" />\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ButtonDelete = ({ id, onClickDelete }) => {\r\n\treturn (\r\n\t\t<button onClick={() => onClickDelete(id)} title=\"Delete\" className=\"btn btn-sm btn-info text-white\">\r\n\t\t\t<FontAwesomeIcon icon=\"window-close\" />\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default ButtonDelete;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ButtonMove = ({ id, lastId, onClickMove }) => {\r\n\tconst btnStyle = \"btn btn-sm bg-outline-warning\";\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t{id > 0 ? (\r\n\t\t\t\t<button onClick={() => onClickMove(id, -1)} title=\"Up\" className={btnStyle}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"chevron-up\" size=\"xs\" />\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\r\n\t\t\t{id < lastId - 1 ? (\r\n\t\t\t\t<button onClick={() => onClickMove(id, 1)} title=\"Down\" className={btnStyle}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"chevron-down\" size=\"xs\" />\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ButtonMove;\r\n","import React from \"react\";\r\n\r\nimport Item from \"./Item\";\r\nimport Button from \"./Button\";\r\nimport ButtonDelete from \"./ButtonDelete\";\r\nimport ButtonMove from \"./ButtonMove\";\r\n\r\nconst List = ({ currentTodos, onClickProps, onClickDelete, onClickMove, todoDone }) => {\r\n\t// the map function will read todos list passed in from App state\r\n\t// and create a List component\r\n\tconst todoList = currentTodos.map((todo, index) => {\r\n\t\tif (todo.done === !todoDone) {\r\n\t\t\treturn (\r\n\t\t\t\t<Item key={index} todo={todo}>\r\n\t\t\t\t\t<Button onClick={onClickProps} id={index} todoDone={todoDone} />\r\n\t\t\t\t\t{todoDone ? (\r\n\t\t\t\t\t\t<ButtonMove id={index} lastId={currentTodos.length} onClickMove={onClickMove} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ButtonDelete id={index} onClickDelete={onClickDelete} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Item>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t});\r\n\r\n\treturn <ul className=\"shadow p-2 m-2 bg-white rounded w-100\">{todoList}</ul>;\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nclass SubmitTodoForm extends React.Component {\r\n\tstate = {\r\n\t\tinput: \"\",\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ input: e.target.value });\r\n\t};\r\n\r\n\thandleClick = (e) => {\r\n\t\tconst inputElement = document.getElementById(\"todoInput\");\r\n\t\tinputElement.value = \"\";\r\n\t\tinputElement.focus();\r\n\t\tif (this.state.input.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst newInput = this.state.input;\r\n\t\tthis.setState({ input: \"\" });\r\n\t\tthis.props.onSubmitProps(newInput);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"shadow px-2 bg-white rounded d-flex flex-row my-5\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"todoInput\"\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tclassName=\"col form-control mb-2 mr-sm-2\"\r\n\t\t\t\t\tplaceholder=\"Enter Todo\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={this.handleClick} className=\"btn btn-primary mb-2\">\r\n\t\t\t\t\tAdd Todo\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SubmitTodoForm;\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport List from \"../components/List\";\r\nimport SubmitTodoForm from \"../components/SubmitTodoForm\";\r\n\r\nclass Container extends Component {\r\n\tstate = {\r\n\t\ttodos: [],\r\n\t};\r\n\r\n\tclickHandler = (id) => {\r\n\t\tlet todos = [];\r\n\t\ttodos = this.state.todos.map((todo, index) => {\r\n\t\t\treturn index === id ? { task: todo.task, done: !todo.done, id: todo.id } : todo;\r\n\t\t});\r\n\r\n\t\tthis.setState({ todos });\r\n\t};\r\n\r\n\tsubmitHandler = (input) => {\r\n\t\tif (input.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst todos = [...this.state.todos];\r\n\t\tconst newTodo = { task: input, done: false, id: uuid() };\r\n\t\tthis.setState({ todos: [...todos, newTodo] });\r\n\t};\r\n\r\n\tclickDeleteHandler = (id) => {\r\n\t\tconst todos = this.state.todos.filter((t, index) => index !== id);\r\n\t\tthis.setState({ todos });\r\n\t};\r\n\r\n\tclickMoveHandler = (id, step) => {\r\n\t\tif ((id === 0 && step < 0) || (id === this.state.todos.length - 1 && step > 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// // const from = id;\r\n\t\t// // const to = from + step;\r\n\t\t// console.log(from, to);\r\n\t\tconst todos = [...this.state.todos];\r\n\t\ttodos[id + step] = this.state.todos[id];\r\n\t\ttodos[id] = this.state.todos[id + step];\r\n\r\n\t\tthis.setState({ todos });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container-fluid d-flex flex-column align-items-center\">\r\n\t\t\t\t<div className=\"col-lg-6 col-md-8 col-sx-10\">\r\n\t\t\t\t\t<SubmitTodoForm onSubmitProps={this.submitHandler} />\r\n\t\t\t\t\t<h4>Todo List</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\tonClickProps={this.clickHandler}\r\n\t\t\t\t\t\tonClickMove={this.clickMoveHandler}\r\n\t\t\t\t\t\ttodoDone={true}\r\n\t\t\t\t\t\tcurrentTodos={this.state.todos}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h4 className=\"mt-4\">Todo History</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\tonClickProps={this.clickHandler}\r\n\t\t\t\t\t\tonClickDelete={this.clickDeleteHandler}\r\n\t\t\t\t\t\ttodoDone={false}\r\n\t\t\t\t\t\tcurrentTodos={this.state.todos}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n\tfaTrash,\r\n\tfaTrashRestore,\r\n\tfaWindowClose,\r\n\tfaPencilAlt,\r\n\tfaChevronUp,\r\n\tfaChevronDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Container from \"./containers/Container\";\r\nimport \"./App.css\";\r\n\r\nlibrary.add(faTrash, faTrashRestore, faWindowClose, faPencilAlt, faChevronUp, faChevronDown);\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <Container />;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}